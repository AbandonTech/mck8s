---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mck8s-ingress-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: mck8s-ingress
rules:
  - apiGroups: [""]
    resources: ["services","secrets"]
    verbs: ["get", "watch", "list"]
  - apiGroups: ["extensions","networking.k8s.io"]
    resources: ["ingresses",]
    verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: mck8s-ingress-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: mck8s-ingress
subjects:
  - kind: ServiceAccount
    name: mck8s-ingress-controller
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mck8s-ingress-controller
  labels:
    app: mck8s-ingress-controller
spec:
  selector:
    matchLabels:
      app: mck8s-ingress-controller
  template:
    metadata:
      labels:
        app: mck8s-ingress-controller
    spec:
      serviceAccountName: mck8s-ingress-controller
      containers:
        - name: mck8s-ingress-controller
          image: mck8s-ingress-controller:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: minecraft
              containerPort: 25565
---
apiVersion: v1
kind: Service
metadata:
  name: mck8s-ingress
spec:
  type: NodePort
  ports:
    - name: minecraft
      port: 25565
      targetPort: 25565
      nodePort: 25565
      protocol: TCP
